{"version":3,"file":"static/js/482.d3595ae0.chunk.js","mappings":"iOAMe,SAASA,IACtB,OAAmFC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7DC,EAAI,EAA7BC,wBAA6DC,EAAS,EAAvCC,6BAEjCC,GAAgBC,EAAAA,EAAAA,GAAaH,EAAWF,GAExCM,GAA2BC,EAAAA,EAAAA,UAAQ,WACvC,OAA6B,IAAzBH,EAAcI,OACT,OAEFJ,EAAcK,MAAK,SAAAC,GAAC,MAAqB,gBAAjBA,EAAY,QAAmB,IAAE,WAClE,GAAG,CAACN,IAEEO,GAA4BJ,EAAAA,EAAAA,UAAQ,WACxC,OAA6B,IAAzBH,EAAcI,OACT,OAEFJ,EAAcK,MAAK,SAAAC,GAAC,MAAqB,qBAAjBA,EAAY,QAAwB,IAAE,WACvE,GAAG,CAACN,IAEEQ,GAAwBL,EAAAA,EAAAA,UAAQ,WACpC,OAA6B,IAAzBH,EAAcI,OACT,OAEFJ,EAAcK,MAAK,SAAAC,GAAC,MAAqB,aAAjBA,EAAY,QAAgB,IAAE,WAC/D,GAAG,CAACN,IAEES,GAAcN,EAAAA,EAAAA,UAAQ,WAC1B,OAA6B,IAAzBH,EAAcI,OACT,SAEFJ,EAAcK,MAAK,SAAAC,GAAC,MAAqB,aAAjBA,EAAY,QAAgB,IAAE,IAAII,QAAQ,KAAM,GACjF,GAAG,CAACV,IAGJ,OAAIF,GACK,cAAGa,UAAU,mBAAkB,mCAItC,iBAAKA,UAAU,iBAAgB,WAC7B,eAAIC,MAAO,CACTC,OAAQ,cACRC,QAAS,IACTC,SAAU,OACVC,WAAY,OACZ,8BAGF,eAAGL,UAAU,aAAY,WACvB,SAAC,MAAM,CAACA,UAAU,cACjBF,MAEH,gBAAKE,UAAU,mBAAkB,UAC/B,iBAAKA,UAAU,aAAY,WACzB,iBAAKA,UAAU,cAAa,WAC1B,8CACA,0BACE,SAAC,MAAM,CAACC,MAAO,CAACK,QAAS,OAAQC,aAAc,MAAOC,aAAc,OAAQC,QAAS,SACpFlB,SAGL,iBAAKS,UAAU,cAAa,WAC1B,+CACA,0BACE,SAAC,MAAY,CAACC,MAAO,CAACK,QAAS,OAAQC,aAAc,MAAOC,aAAc,OAAQC,QAAS,SAC1Fb,SAGL,iBAAKI,UAAU,cAAa,WAC1B,2CACA,0BACE,SAAC,MAAQ,CAACC,MAAO,CAACS,MAAO,UAAWH,aAAc,MAAOC,aAAc,OAAQC,QAAS,SACvFZ,eAOf,C","sources":["components/TotalImmersion.js"],"sourcesContent":["import { useContext, useMemo } from \"react\";\nimport useParsedCsv from \"../hooks/use-parsed-csv\";\nimport { HiFire } from \"react-icons/hi\";\nimport { ImHeadphones, ImBook, ImTrophy } from \"react-icons/im\";\nimport { AggregatedImmersionContext } from \"../providers/AggregatedImmersionProvider\";\n\nexport default function TotalImmersion () {\n  const { aggregatedImmersionData: data, aggregatedImmersionIsLoading: isLoading } = useContext(AggregatedImmersionContext);\n\n  const parsedCsvData = useParsedCsv(isLoading, data);\n\n  const totalActiveImmersionTime = useMemo(() => {\n    if (parsedCsvData.length === 0) {\n      return \"0:00\";\n    }\n    return parsedCsvData.find(d => d[\"Category\"] == \"Active total\")[\"All Time\"];\n  }, [parsedCsvData]);\n\n  const totalPassiveImmersionTime = useMemo(() => {\n    if (parsedCsvData.length === 0) {\n      return \"0:00\";\n    }\n    return parsedCsvData.find(d => d[\"Category\"] == \"Passive Listening\")[\"All Time\"];\n  }, [parsedCsvData]);\n\n  const totalAllImmersionTime = useMemo(() => {\n    if (parsedCsvData.length === 0) {\n      return \"0:00\";\n    }\n    return parsedCsvData.find(d => d[\"Category\"] == \"All total\")[\"All Time\"];\n  }, [parsedCsvData]);\n\n  const daysTracked = useMemo(() => {\n    if (parsedCsvData.length === 0) {\n      return \"0 days\";\n    }\n    return parsedCsvData.find(d => d[\"Category\"] == \"All total\")[\"\"].replace(\"/ \", \"\");\n  }, [parsedCsvData]);\n\n\n  if (isLoading) {\n    return <p className=\"loading-messsage\">Fetching csv file...</p>;\n  }\n\n  return (\n    <div className=\"TotalImmersion\">\n      <h1 style={{\n        margin: \"4px 0 2px 0\",\n        padding: \"0\",\n        fontSize: \"28px\",\n        fontWeight: \"600\"\n      }}>\n        Total Immersion\n      </h1>\n      <p className=\"total-days\">\n        <HiFire className=\"days-fire\"/>\n        {daysTracked}\n      </p>\n      <div className=\"totals-container\">\n        <div className=\"totals-row\">\n          <div className=\"totals-card\">\n            <h2>Active Immersion</h2>\n            <p>\n              <ImBook style={{display: \"none\", paddingRight: \"4px\", marginBottom: \"-2px\", opacity: \"0.8\"}}/>\n              {totalActiveImmersionTime}\n            </p>\n          </div>\n          <div className=\"totals-card\">\n            <h2>Passive Immersion</h2>\n            <p>\n              <ImHeadphones style={{display: \"none\", paddingRight: \"6px\", marginBottom: \"-1px\", opacity: \"0.8\"}}/>\n              {totalPassiveImmersionTime}\n            </p>\n          </div>\n          <div className=\"totals-card\">\n            <h2>All Immersion</h2>\n            <p>\n              <ImTrophy style={{color: \"#ce82ff\", paddingRight: \"8px\", marginBottom: \"-3px\", opacity: \"0.8\"}}/>\n              {totalAllImmersionTime}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["TotalImmersion","useContext","AggregatedImmersionContext","data","aggregatedImmersionData","isLoading","aggregatedImmersionIsLoading","parsedCsvData","useParsedCsv","totalActiveImmersionTime","useMemo","length","find","d","totalPassiveImmersionTime","totalAllImmersionTime","daysTracked","replace","className","style","margin","padding","fontSize","fontWeight","display","paddingRight","marginBottom","opacity","color"],"sourceRoot":""}